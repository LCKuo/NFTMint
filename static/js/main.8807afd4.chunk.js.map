{"version":3,"sources":["logo.png","components/navbar.js","components/BuyForm.js","components/SellForm.js","components/mintForm.js","components/Main.js","components/App.js","serviceWorker.js","index.js","LC.png","eth.png"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","width","height","src","concat","Identicon","toString","alt","Component","BuyForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","output","_this2","onSubmit","event","ethAmount","preventDefault","input","value","window","web3","utils","toWei","buyTokens","balaA","type","onChange","setState","ref","placeholder","required","ethLogo","balaB","disabled","tokenLogo","SellForm","tokenAmount","sellTokens","Mintform","reviel","get_all","mint","rev","set_rev","onClick","mint_Like_A_Boss","e","open_my_damn_box","view_my_damn_assets","Main","buying","minting","i","formShow","mintForm","set","components_BuyForm","components_SellForm","handleClick","App","etherAmount","loading","eth","methods","send","from","on","hash","LCAmount","token","approve","address","mintToken","createCollectible","set_token_uri","uri","uncover","get_All_tokens_uri","getAllToken","then","console","log","set_Reviel","bool","setReviel","ethBalance","tokenBalance","mintable_contract_address","loadWeb3","loadBlockChainData","getAccounts","accounts","getBalance","net","getId","netWorkID","Token","networks","Contract","abi","balanceOf","alert","EthLCSwap","Mintable","ethereum","Web3","enable","currentProvider","content","components_Main","fromWei","navbar","role","style","maxWidth","logo","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8807afd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.992fa27d.png\";","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"https://www.youtube.com/channel/UCzIUSN90Tr4S31eMDg3EHrQ\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          LC - EthSwap\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\"/**secondary 可以決定顏色??? */>\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n\r\n            {this.props.account\r\n              ? <img\r\n                className=\"ml-2\"\r\n                width='30'\r\n                height='30'\r\n                //完全不能寫錯= = ，空格符號等等\r\n                //把帳號丟進去產圖\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n                alt=\"\"\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport tokenLogo from '../LC.png';\r\nimport ethLogo from '../eth.png';\r\n\r\nclass BuyForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            output: 0\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"mb-3\" onSubmit={(event) => {\r\n                event.preventDefault()\r\n                let ethAmount\r\n                ethAmount = this.input.value.toString()\r\n                ethAmount = window.web3.utils.toWei(ethAmount, 'ether')\r\n                this.props.buyTokens(ethAmount)\r\n            }}>\r\n                <div>\r\n                    <label className='float-left'><b>Input</b></label>\r\n                    <span className='float-right text-muted'>\r\n                        Balance : {this.props.balaA} &nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className='input-group mb-4'>\r\n                    <input\r\n                        type=\"text\"\r\n                        //當inputField開始輸入時\r\n                        onChange={(event) => {\r\n                            const ethAmount = this.input.value.toString()\r\n                            this.setState({\r\n                                output: ethAmount * 100\r\n                            })\r\n                        }}\r\n                        ref={(input) => { this.input = input }}\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder='0'\r\n                        required />\r\n                    <div className='input-group-append'>\r\n                        <div className='input-group-text'>\r\n                            <img src={ethLogo} height='32' alt=\"\" />\r\n                            &nbsp;&nbsp; ETH&nbsp;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label className='float-left'><b>Output</b></label>\r\n                    <span className='float-right text-muted'>\r\n                        Balance: {this.props.balaB}&nbsp;\r\n                    </span>\r\n                </div>\r\n                <div className='input-group mb-2'>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder={this.state.output}\r\n                        disabled\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                            <img src={tokenLogo} height='32' alt=\"\" />\r\n                            &nbsp;LC  &nbsp;\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mb-5'>\r\n                    <span className='float-left text-muted'>匯率</span>\r\n                    <span className='float-right text-muted'>1 ETH = 100 LC</span>\r\n                </div>\r\n                <button type='submit' className='btn btn-primary btn-block btn-lg'>交易</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BuyForm;","import React, { Component } from 'react';\r\nimport tokenLogo from '../LC.png';\r\nimport ethLogo from '../eth.png';\r\n\r\nclass SellForm extends Component {\r\n\r\n  constructor(props){\r\n      super(props)\r\n      this.state ={\r\n          output:0\r\n      }\r\n  }  \r\n  render() {\r\n    return (\r\n        <form className=\"mb-3\" onSubmit={(event)=>{\r\n            event.preventDefault()\r\n            let tokenAmount\r\n            tokenAmount = this.input.value.toString()\r\n            tokenAmount = window.web3.utils.toWei(tokenAmount,'ether')\r\n            this.props.sellTokens(tokenAmount)\r\n        }}>\r\n            <div>\r\n                <label className='float-left'><b>Input</b></label>\r\n                <span className='float-right text-muted'>\r\n                  Balance : {this.props.balaB} &nbsp;                      \r\n                </span>\r\n            </div>\r\n            <div className='input-group mb-4'>\r\n                  <input\r\n                      type=\"text\"\r\n                      //當inputField開始輸入時\r\n                      onChange={(event)=>{\r\n                      const tokenAmount = this.input.value.toString()\r\n                      this.setState({\r\n                          output:tokenAmount / 100\r\n                          })\r\n                      }}\r\n                      ref={(input)=>{this.input = input}}\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder='0'\r\n                      required />\r\n                  <div className='input-group-append'>\r\n                      <div className='input-group-text'>\r\n                          <img src={tokenLogo} height='32' alt=\"\"/>\r\n                          &nbsp;&nbsp; LC&nbsp;\r\n                      </div>\r\n                  </div>\r\n            </div>\r\n            <div>\r\n                <label className='float-left'><b>Output</b></label>\r\n                <span className='float-right text-muted'>\r\n                    Balance: {this.props.balaA}&nbsp;\r\n                </span>\r\n            </div>\r\n            <div className='input-group mb-2'>\r\n                  <input\r\n                      type=\"text\"\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder={this.state.output}\r\n                      disabled\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">\r\n                          <img src={ethLogo} height='32' alt=\"\"/>\r\n                          &nbsp;&nbsp; ETH&nbsp;\r\n                      </div>\r\n                  </div>\r\n            </div>\r\n            <div className='mb-5'>\r\n                <span className='float-left text-muted'>匯率</span>\r\n                <span className='float-right text-muted'>100 LC = 1 ETH</span>\r\n            </div>\r\n            <button type='submit' className='btn btn-primary btn-block btn-lg'>交易</button>\r\n        </form>\r\n        );\r\n  }\r\n}\r\n\r\nexport default SellForm;","import React, { Component } from 'react';\r\n\r\nclass Mintform extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            output: 0,\r\n            reviel: true\r\n        }\r\n    }\r\n\r\n    view_my_damn_assets() {\r\n\r\n        this.props.get_all(this.props.account)//put add\r\n    }\r\n\r\n    mint_Like_A_Boss() {\r\n        this.props.mint(100000000000000000)\r\n        //0.1 ETH\r\n    }\r\n\r\n    open_my_damn_box(rev) {\r\n        this.props.set_rev(rev)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"mb-3\">\r\n                <h1>鑄造盲盒!</h1>\r\n                <div>\r\n                    <label className='float-left'><b>費用</b></label>\r\n                    <span className='float-right text-muted'>\r\n                        0.1Eth/盲盒&nbsp;\r\n                    </span>\r\n                </div>\r\n\r\n                <button className='btn btn-primary btn-block btn-lg' onClick={() => this.mint_Like_A_Boss()}>\r\n                    鑄造\r\n                </button>\r\n                <div>\r\n                    <label className='float-leftb'><span></span></label>\r\n                </div>\r\n                <label className='float-left'><b>隨機開啟 NFT 外觀 {this.state.reviel}</b></label>\r\n                <button className='btn btn-primary btn-block btn-lg' onClick={(e) => this.open_my_damn_box(true, e)}>\r\n                    開盲盒\r\n                </button>\r\n                <button className='btn btn-primary btn-block btn-lg' onClick={(e) => this.open_my_damn_box(false, e)}>\r\n                    關盲盒\r\n                </button>\r\n                <div>\r\n                    <label className='float-leftb'><span></span></label>\r\n                </div>\r\n                <label className='float-left'><b>顯示所有資產(json)</b></label>\r\n\r\n                <button className='btn btn-primary btn-block btn-lg' onClick={() => this.view_my_damn_assets()}>\r\n                    我的資產\r\n                </button>\r\n            </form >\r\n        );\r\n    }\r\n}\r\nexport default Mintform;","import React, { Component } from 'react';\r\nimport BuyForm from './BuyForm';\r\nimport SellForm from './SellForm';\r\nimport Mintform from './mintForm';\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      output: 0,\r\n      buying: true,\r\n      minting: true\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    switch (i) {\r\n      case 0:\r\n        this.setState({ buying: true })\r\n        this.setState({ minting: false })\r\n        break\r\n      case 1:\r\n        this.setState({ buying: false })\r\n        this.setState({ minting: false })\r\n        break\r\n      case 2:\r\n        this.setState({ buying: false })\r\n        this.setState({ minting: true })\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let formShow;\r\n    if (!this.state.minting) {\r\n      if (this.state.buying) {\r\n        formShow = <BuyForm balaA={this.props.balaA} balaB={this.props.balaB} buyTokens={this.props.buyTokens} />\r\n      } else {\r\n        formShow = <SellForm balaA={this.props.balaA} balaB={this.props.balaB} sellTokens={this.props.sellTokens} />\r\n      }\r\n    } else {\r\n      formShow = <Mintform mint={this.props.mint} set={this.props.set} get_all={this.props.get_all} account={this.props.account} set_rev={this.props.set_rev} />\r\n    }\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <button className='btn btn-light' onClick={(e) => this.handleClick(0, e)}>\r\n            買\r\n          </button>\r\n          <span className='text-muted'>&lt;&nbsp;&gt;</span>\r\n          <button className='btn btn-light' onClick={(e) => this.handleClick(2, e)}>\r\n            鑄造\r\n          </button>\r\n          <span className='text-muted'>&lt;&nbsp;&gt;</span>\r\n          <button className='btn btn-light' onClick={(e) => this.handleClick(1, e)}>\r\n            賣\r\n          </button>\r\n        </div>\r\n        <div className=\"card mb-4\">\r\n          <div className='card-body'>\r\n            {formShow}\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport logo from '../logo.png';\r\nimport './App.css';\r\nimport Web3 from 'web3';\r\nimport Navbar from './navbar';\r\n\r\nimport EthLCSwap from '../abis/EthLCSwap.json';\r\nimport Token from '../abis/Token.json';\r\nimport Main from './Main';\r\nimport Mintable from '../abis/MintAbleCollectible.json'\r\n\r\nclass App extends Component {\r\n\r\n  //類似 Start()\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockChainData()\r\n  }\r\n\r\n  //抓連結帳戶，塞到 account constructor 裡面\r\n  async loadBlockChainData() {\r\n    const Web3 = window.web3\r\n\r\n    const accounts = await window.web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n\r\n    const ethBalance = await window.web3.eth.getBalance(this.state.account)\r\n    this.setState({ ethBalance: ethBalance })\r\n\r\n    //宣告出token這個合約\r\n    const netWorkID = await window.web3.eth.net.getId()\r\n    const tokenData = Token.networks[netWorkID]\r\n    //原先netWorkId寫死成5777(ganache的ID) \r\n    //const address = Token.networks['5777'].address\r\n    if (true) {\r\n      const token = new window.web3.eth.Contract(Token.abi, '0xe086275b3693A3eBdf8E83ABD4Cc9Ee20064FC75')\r\n      //簡化成下面this.setState({token : token})\r\n      this.setState({ token })\r\n\r\n      //取得目前用戶的 LC幣 總量\r\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\r\n      this.setState({ tokenBalance: tokenBalance.toString() })\r\n    } else {\r\n      window.alert('token 合約沒有發佈到這個鏈上')\r\n    }\r\n    //console.log(tokenData.address)\r\n    //宣告出 ethSwap 這個合約\r\n    const ethSwapData = EthLCSwap.networks[netWorkID]\r\n    //原先netWorkId寫死成5777(ganache的ID) \r\n    //const address = EthLCSwap.networks['5777'].address\r\n    if (true) {\r\n      const eth = new window.web3.eth.Contract(EthLCSwap.abi, '0xFf2174d42C76a00B4F051339E58b860D5D29dCf6')\r\n      this.setState({ eth })\r\n    } else {\r\n      window.alert('ethSwap 合約沒有發佈到這個鏈上')\r\n    }\r\n\r\n    const mintable_contract_address = '0xb21BDB124Ee7a18024488DeB3CDaD555D244E7d1'\r\n    const mint = new window.web3.eth.Contract(Mintable.abi, mintable_contract_address)\r\n    this.setState({ mint })\r\n    this.setState({ mintable_contract_address })\r\n\r\n    this.setState({ loading: false })\r\n\r\n  }\r\n\r\n  //使這網頁連結 metaMask(web3)\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n    }\r\n  }\r\n\r\n  //reactjs.org 抓的 TODO\r\n  //這裡儲存連結錢包的使用者，的帳號、存款\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: '',\r\n      token: {},\r\n      ethBalance: '0',\r\n      tokenBalance: '0',\r\n      eth: {},\r\n      loading: true,\r\n      mint: {},\r\n      mintable_contract_address: ''\r\n    };\r\n  }\r\n\r\n\r\n  //宣告買幣function\r\n  buyTokens = (etherAmount) => {\r\n    this.setState({ loading: true })\r\n    this.state.eth.methods.buyTokens().send({ value: etherAmount, from: this.state.account }).on('transactionHash', (hash) => { this.setState({ loading: false }) })\r\n  }\r\n\r\n  //宣告賣幣function\r\n  sellTokens = (LCAmount) => {\r\n    this.setState({ loading: true })\r\n    this.state.token.methods.approve(this.state.eth.address, LCAmount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n      this.state.eth.methods.sellTokens(LCAmount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  mintToken = (etherAmount) => {\r\n    this.setState({ loading: true })\r\n    this.state.mint.methods.createCollectible().send({ value: etherAmount, from: this.state.account }).on('transactionHash', (hash) => { this.setState({ loading: false }) })\r\n  }\r\n\r\n  set_token_uri = (uri) => {\r\n    this.setState({ loading: true })\r\n    this.state.mint.methods.uncover(uri).send({ from: this.state.account }).on('transactionHash', (hash) => { this.setState({ loading: false }) })\r\n  }\r\n\r\n  get_All_tokens_uri = (address) => {\r\n    this.setState({ loading: true })\r\n    this.state.mint.methods.getAllToken(address).call().then(console.log)\r\n  }\r\n\r\n  set_Reviel = (bool) => {\r\n    this.setState({ loading: true })\r\n    this.state.mint.methods.setReviel(bool).send({ from: this.state.account }).on('transactionHash', (hash) => { this.setState({ loading: false }) })\r\n  }\r\n\r\n  render() {\r\n    let content\r\n    if (this.state.loading) {\r\n      content = <p id=\"loader\" className=\"text-center\">Loading ... </p>\r\n    } else {\r\n      content = <Main\r\n        balaA={window.web3.utils.fromWei(this.state.ethBalance, 'ether')}\r\n        balaB={window.web3.utils.fromWei(this.state.tokenBalance, 'ether')}\r\n        //把買幣function弄進Main.js\r\n        buyTokens={this.buyTokens}\r\n        sellTokens={this.sellTokens}\r\n        mint={this.mintToken}\r\n        set={this.set_token_uri}\r\n        get_all={this.get_All_tokens_uri}\r\n        set_rev={this.set_Reviel}\r\n        account={this.state.account}\r\n      />\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"https://testnets.opensea.io/collection/dogie-bdd3p12e5f\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n                </a>\r\n                {content}\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/LC.9697bb33.png\";","module.exports = __webpack_public_path__ + \"static/media/eth.76e673b3.png\";"],"sourceRoot":""}